user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    keepalive_timeout 65;
    
    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    server {
        listen 80;
        server_name _; # This matches any domain/IP
        
        # Redirect all HTTP requests to HTTPS (uncomment when using HTTPS)
        # location / {
        #     return 301 https://$host$request_uri;
        # }
        
        location / {
            proxy_pass http://web:3000; # Point to the web service name in Docker
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # HTTPS server (uncomment and configure SSL when ready)
    # server {
    #     listen 443 ssl;
    #     server_name _; # This matches any domain/IP
    #     
    #     ssl_certificate /etc/nginx/certificate.crt;
    #     ssl_certificate_key /etc/nginx/private.key;
    #     
    #     location / {
    #         proxy_pass http://web:3000; # Point to the web service name in Docker
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
} 